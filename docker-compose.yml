version: '2.1'

services:
  setup:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.4.1
    volumes:
      - certs:/usr/share/elasticsearch/config/certs
    user: "0"
    command: >
      bash -c '
        if [ ! -f config/certs/certs.zip ]; then
          echo "Creating certs";
          echo -ne \
          "instances:\n"\
          "  - name: elasticsearch\n"\
          "    dns:\n"\
          "      - elasticsearch\n"\
          "      - localhost\n"\
          "    ip:\n"\
          "      - 127.0.0.1\n"\
          > config/certs/instances.yml;
          bin/elasticsearch-certutil cert --silent --pem -out config/certs/certs.zip --in config/certs/instances.yml --ca-cert config/certs/ca/ca.crt --ca-key config/certs/ca/ca.key;
          unzip config/certs/certs.zip -d config/certs;
        fi;
        echo "Setting file permissions"
        chown -R root:root config/certs;
        find . -type d -exec chmod 750 \{\} \;;
        find . -type f -exec chmod 640 \{\} \;;
        echo "Waiting for Elasticsearch availability";
        until curl -s --cacert config/certs/ca/ca.crt https://elasticsearch:9200 | grep -q "missing authentication credentials"; do sleep 30; done;
        echo "Setting kibana_system password";
        until curl -s -X POST --cacert config/certs/ca/ca.crt -u "elastic:rScQW3pnSWNY6*i0Aq8Y" -H "Content-Type: application/json" https://elasticsearch:9200/_security/user/kibana_system/_password -d "{\"password\":\"20Bm08n08iWL-BELTzrg\"}" | grep -q "^{}"; do sleep 10; done;
        echo "All done!";
      '
    healthcheck:
      test: [ "CMD-SHELL", "[ -f config/certs/elasticsearch/elasticsearch.crt ]" ]
      interval: 1s
      timeout: 5s
      retries: 120

  app:
    build: .
    #    volumes:
    #      - .:/app
    ports:
      -  "8080:8080"
#    depends_on:
#        db:
#          condition: service_healthy
#    links:
#          - db
    env_file:
      - core.env
    entrypoint: ["/bin/sh", "entrypoint.sh"]


#  db:
#    image: postgres
#    volumes:
#      - postgres_data:/var/lib/postgresl/data/
#    ports:
#      - "5432:5432"
#    healthcheck:
#      test: ["CMD-SHELL", "pg_isready -U postgres"]
#      interval: 10s
#      timeout: 10s
#      retries: 3
#    env_file:
#      - core.env

  # running on a single node for development.
  # prod settings here: https://www.elastic.co/guide/en/elasticsearch/reference/current/docker.html#docker-cli-run-prod-mode
  elasticsearch:
    depends_on:
      setup:
        condition: service_healthy
    image: docker.elastic.co/elasticsearch/elasticsearch:8.4.1
    volumes:
      - certs:/usr/share/elasticsearch/config/certs
      - 'es_data:/usr/share/elasticsearch/data'
    ports:
      - "9200:9200"
      - "9300:9300"
    expose:
      - "9200"
    environment:
      - bootstrap.memory_lock=true
      - cluster.name=springelasticgenie
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - "discovery.type=single-node"
      - "ELASTIC_PASSWORD=elastic"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "curl -s --cacert config/certs/ca/ca.crt https://localhost:9200 | grep -q 'missing authentication credentials'",
        ]

#  elastichq:
#    image: elastichq/elasticsearch-hq
#    ports:
#      - "5000:5000"
#    links:
#      - elasticsearch
#    depends_on:
#      - elasticsearch

  logstash:
    image: docker.elastic.co/logstash/logstash:8.4.1
    volumes:
      - certs:/usr/share/logstash/config/certs
      - ./logstash/config-dir:/usr/share/logstash/config-dir
      - ./logstash/drivers/:/usr/share/logstash/drivers
    command: logstash -f /usr/share/logstash/config-dir/logstash.conf
    env_file:
      - core.env
    links:
      - elasticsearch
    depends_on:
      - elasticsearch

  kibana:
    image: docker.elastic.co/kibana/kibana:8.4.1
    volumes:
      - certs:/usr/share/kibana/config/certs
    ports:
      - "5601:5601"
    environment:
      - ELASTICSEACH_URL=http://elasticsearch:9200
      - ELASTICSEARCH_USERNAME=kibana_system
      - ELASTICSEARCH_PASSWORD=20Bm08n08iWL-BELTzrg
    links:
      - elasticsearch
    depends_on:
      - elasticsearch

volumes:
  certs:
    driver: local
  postgres_data:
      driver: local
  es_data:
      driver: local
